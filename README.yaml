# Name of this project
name: terraform-aws-managed-prometheus

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2021"

# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-managed-prometheus

# Badges to display
badges:
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/terraform-aws-managed-prometheus.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-managed-prometheus/commits
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse/terraform-aws-managed-prometheus.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-managed-prometheus/releases/latest
  - name: Last Updated
    image: https://img.shields.io/github/last-commit/cloudposse/terraform-aws-managed-prometheus.svg?style=for-the-badge
    url: https://github.com/cloudposse/terraform-aws-managed-prometheus/commits
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com

# List any related terraform modules that this module may be used with or that this module depends on.
related:
  - name: "terraform-null-label"
    description: "Terraform module designed to generate consistent names and tags for resources. Use terraform-null-label to implement a strict naming convention."
    url: "https://github.com/cloudposse/terraform-null-label"

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:
  - name: "Cloud Posse Documentation"
    url: "https://docs.cloudposse.com"
    description: "The Cloud Posse Developer Hub (documentation)"
  - name: "Terraform Standard Module Structure"
    description: "HashiCorp's standard module structure is a file and directory layout we recommend for reusable modules distributed in separate repositories."
    url: "https://www.terraform.io/docs/language/modules/develop/structure.html"
  - name: "Terraform Module Requirements"
    description: "HashiCorp's guidance on all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy."
    url: "https://www.terraform.io/docs/registry/modules/publish.html#requirements"
  - name: "Terraform Version Pinning"
    description: "The required_version setting can be used to constrain which versions of the Terraform CLI can be used with your configuration"
    url: "https://www.terraform.io/docs/language/settings/index.html#specifying-a-required-terraform-version"

# Short description of this project
description: |-
  This module is responsible for provisioning a workspace for Amazon Managed Service for Prometheus, also known as Amazon Managed Prometheus (AMP).

# Introduction to the project
introduction: |-
  Amazon Managed Service for Prometheus provides highly available, secure, and managed monitoring for your containers. It automatically scales as your ingestion and query needs grow, and gives you access to remote write metrics from existing Prometheus servers and to query metrics using PromQL.

  Deploy this module alongside a managed collector to read metrics from EKS and visualize them with Grafana. For example, see [terraform-aws-managed-grafana](https://github.com/cloudposse/terraform-aws-managed-grafana).

# How to use this module. Should be an easy example to copy and paste.
usage: |-
  For a complete example, see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [test](test).

  ```hcl
  locals {
    grafana_account_id = "123456789012"
  }

  # Create a standard label resource. See [null-label](https://github.com/cloudposse/terraform-null-label/#terraform-null-label--)
  module "label" {
    source  = "cloudposse/label/null"
    # Cloud Posse recommends pinning every module to a specific version, though usually you want to use the current one
    # version = "x.x.x"

    namespace = "eg"
    name      = "example"
  }

  module "prometheus" {
    source  = "cloudposse/managed-prometheus/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version = "x.x.x"

    allowed_account_id       = local.grafana_account_id # The ID of another account allowed to access this Managed Prometheus Workspace
    scraper_deployed         = true

    vpc_id = var.vpc_id # The ID of some VPC allowed to access this Managed Prometheus Workspace

    context = module.label.this
  }
  ```

# Example usage
examples: |-
  Here is an example of using this module:
  - [`examples/complete`](https://github.com/cloudposse/terraform-aws-managed-prometheus/) - complete example of using this module

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"

contributors: []
